# sent_id = reviews-329692-0007
# sent_num = 1
# text = Well, not much I can say except I'm very disappointed with this experience.
# sent = well not much I can say -- except I 'm very disappointed with this experience
(NP
    :Supplement (IntP
        :Head (Int :t "well"))
    :Head (NP
        :Head (Nom
            :Det-Head (y / DP
                :Mod (AdvP
                    :Head (Adv :p "," :t "not"))
                :Head (D :t "much"))
            :Mod (Clause_rel
                :Subj (NP
                    :Head (Nom
                        :Head (N_pro :t "I")))
                :Head (VP
                    :Head (V_aux :t "can")
                    :Comp (Clause
                        :Head (VP
                            :Head (V :t "say")
                            :Obj (y / GAP)))))))
    :Mod (PP
        :Head (P :t "except")
        :Comp (Clause
            :Subj (NP
                :Head (Nom
                    :Head (N_pro :t "I")))
            :Head (VP
                :Head (V_aux :t "'m" :l "be")
                :PredComp (AdjP
                    :Mod (AdvP
                        :Head (Adv :t "very"))
                    :Head (AdjP
                        :Head (Adj :t "disappointed")
                        :Comp (PP
                            :Head (P :t "with")
                            :Obj (NP
                                :Det (DP
                                    :Head (D :t "this"))
                                :Head (Nom
                                    :Head (N :t "experience" :p "."))))))))))

# sent_id = weblog-blogspot.com_dakbangla_20050311135387_ENG_20050311_135387-0106
# sent_num = 2
# text = Microbiologist Abdul Qadoos Khan was charged along with his son, Ahmed, for harboring the fugitives.
# sent = microbiologist Abdul Qadoos Khan was charged along with his son Ahmed for harboring the fugitives
(Clause
    :Subj (NP
        :Head (Nom
            :Mod (Nom
                :Head (N :t "microbiologist"))
            :Head (N
                :Flat (N :t "Abdul")
                :Flat (N :t "Qadoos")
                :Flat (N :t "Khan"))))
    :Head (VP
        :Head (V_aux :t "was" :l "be")
        :Comp (Clause
            :Head (VP
                :Head (V :t "charged" :l "charge")
                :Supplement (PP
                    :Head (P :t "along")
                    :Comp (PP
                        :Head (P :t "with")
                        :Obj (NP
                            :Head (NP
                                :Det (NP
                                    :Head (Nom
                                        :Head (N_pro :t "his" :l "he")))
                                :Head (Nom
                                    :Head (N :t "son")))
                            :Mod (NP
                                :Head (Nom
                                    :Head (N :p "," :t "Ahmed"))))))
                :Comp (PP
                    :Head (P :p "," :t "for")
                    :Comp (Clause
                        :Head (VP
                            :Head (V :t "harboring" :l "harbor")
                            :Obj (NP
                                :Det (DP
                                    :Head (D :t "the"))
                                :Head (Nom
                                    :Head (N :t "fugitives" :l "fugitive" :p "."))))))))))

# sent_id = email-enronsent39_01-0060
# sent_num = 3
# text = Pat Wood made a phone call to Tom Noel and told him to get the Texas market fixed.
# sent = Pat Wood made a phone call to Tom Noel and told him to get the Texas market fixed
(Clause
    :Subj (NP
        :Head (Nom
            :Head (N
                :Flat (N :t "Pat")
                :Flat (N :t "Wood"))))
    :Head (Coordination
        :Coordinate (VP
            :Head (V :t "made" :l "make")
            :Obj (NP
                :Det (DP
                    :Head (D :t "a"))
                :Head (Nom
                    :Mod (Nom
                        :Head (N :t "phone"))
                    :Head (N :t "call")))
            :Comp (PP
                :Head (P :t "to")
                :Obj (NP
                    :Head (Nom
                        :Head (N
                            :Flat (N :t "Tom")
                            :Flat (N :t "Noel"))))))
        :Coordinate (VP
            :Marker (Coordinator :t "and")
            :Head (VP
                :Head (V :t "told" :l "tell")
                :Obj (NP
                    :Head (Nom
                        :Head (N_pro :t "him" :l "he")))
                :Comp (Clause
                    :Head (VP
                        :Marker (Sdr :t "to")
                        :Head (VP
                            :Head (V :t "get")
                            :Obj (NP
                                :Det (DP
                                    :Head (D :t "the"))
                                :Head (Nom
                                    :Mod (Nom
                                        :Head (N :t "Texas"))
                                    :Head (N :t "market")))
                            :PredComp (AdjP
                                :Head (Adj :t "fixed" :l "fix" :p ".")))))))))

# sent_id = newsgroup-groups.google.com_emails_ec0a1064de05e74b_ENG_20040929_023800-0014
# sent_num = 4
# text = The name started as a joke boasting about the amount of information the search-engine would be able to search.
# sent = the name started as a joke boasting about the amount of information the search engine would be able to search --
(Clause
    :Subj (NP
        :Det (DP
            :Head (D :t "the"))
        :Head (Nom
            :Head (N :t "name")))
    :Head (VP
        :Head (V :t "started" :l "start")
        :Comp (PP
            :Head (P :t "as")
            :PredComp (NP
                :Det (DP
                    :Head (D :t "a"))
                :Head (Nom
                    :Head (N :t "joke")
                    :Mod (Clause
                        :Head (VP
                            :Head (V :t "boasting" :l "boast")
                            :Comp (PP
                                :Head (P :t "about")
                                :Obj (NP
                                    :Det (DP
                                        :Head (D :t "the"))
                                    :Head (Nom
                                        :Head (N :t "amount")
                                        :Comp (PP
                                            :Head (P :t "of")
                                            :Obj (NP
                                                :Head (Nom
                                                    :Head (x / N :t "information")
                                                    :Mod (Clause_rel
                                                        :Subj (NP
                                                            :Det (DP
                                                                :Head (D :t "the"))
                                                            :Head (Nom
                                                                :Mod (Nom
                                                                    :Head (N :t "search"))
                                                                :Head (N :p "-" :t "engine")))
                                                        :Head (VP
                                                            :Head (V_aux :t "would")
                                                            :Comp (Clause
                                                                :Head (VP
                                                                    :Head (V_aux :t "be")
                                                                    :PredComp (AdjP
                                                                        :Head (Adj :t "able")
                                                                        :Comp (Clause
                                                                            :Head (VP
                                                                                :Marker (Sdr :t "to")
                                                                                :Head (VP
                                                                                    :Head (V :t "search" :p ".")
                                                                                    :Obj (x / GAP))))))))))))))))))))))

# sent_id = reviews-079375-0005
# sent_num = 5
# text = lol They where super friendly towards us and treated us like people not walking bags of cash.
# sent = lol they where super friendly towards us and treated us like people not walking bags of cash
(Coordination
    :Supplement (IntP
        :Head (Int :t "lol"))
    :Coordinate (Clause
        :Subj (NP
            :Head (Nom
                :Head (N_pro :t "they")))
        :Head (VP
            :Head (V_aux :t "where" :correct "were" :l "be")
            :PredComp (AdjP
                :Mod (AdvP
                    :Head (Adv :t "super"))
                :Head (AdjP
                    :Head (Adj :t "friendly")
                    :Comp (PP
                        :Head (P :t "towards")
                        :Obj (NP
                            :Head (Nom
                                :Head (N_pro :t "us" :l "we"))))))))
    :Coordinate (Clause
        :Marker (Coordinator :t "and")
        :Head (Clause
            :Head (VP
                :Head (V :t "treated" :l "treat")
                :Obj (NP
                    :Head (Nom
                        :Head (N_pro :t "us" :l "we")))
                :Comp (PP
                    :Head (P :t "like")
                    :Obj (NP
                        :Head (Nom
                            :Head (N :t "people"))
                        :Supplement (NP
                            :Mod (AdvP
                                :Head (Adv :t "not"))
                            :Head (NP
                                :Head (Nom
                                    :Mod (VP
                                        :Head (V :t "walking" :l "walk"))
                                    :Head (Nom
                                        :Head (N :t "bags" :l "bag")
                                        :Comp (PP
                                            :Head (P :t "of")
                                            :Obj (NP
                                                :Head (Nom
                                                    :Head (N :t "cash" :p "."))))))))))))))

# sent_id = answers-20111108104724AAuBUR7_ans-0095
# sent_num = 6
# text = A few hundred out of pocket now will possibly save you thousands once the horse is in your name.
# sent = a few hundred out of pocket now will possibly save you thousands once the horse is in your name
(Clause
    :Subj (NP
        :Head (NP
            :Head (Nom
                :Det-Head (DP
                    :Mod (DP
                        :Head (D :t "a few" :l "a" :subt "A" :subt "few"))
                    :Head (D :t "hundred"))
                :Mod (PP
                    :Head (P :t "out")
                    :Comp (PP
                        :Head (P :t "of")
                        :Obj (NP
                            :Head (Nom
                                :Head (N :t "pocket")))))))
        :Mod (PP
            :Head (P :t "now")))
    :Head (VP
        :Head (V_aux :t "will")
        :Comp (Clause
            :Head (VP
                :Mod (AdvP
                    :Head (Adv :t "possibly"))
                :Head (VP
                    :Head (VP
                        :Head (V :t "save")
                        :Obj_ind (NP
                            :Head (Nom
                                :Head (N_pro :t "you")))
                        :Obj_dir (NP
                            :Head (Nom
                                :Head (N :t "thousands" :l "thousand"))))
                    :Mod (PP
                        :Head (P :t "once")
                        :Comp (Clause
                            :Subj (NP
                                :Det (DP
                                    :Head (D :t "the"))
                                :Head (Nom
                                    :Head (N :t "horse")))
                            :Head (VP
                                :Head (V_aux :t "is" :l "be")
                                :PredComp (PP
                                    :Head (P :t "in")
                                    :Obj (NP
                                        :Det (NP
                                            :Head (Nom
                                                :Head (N_pro :t "your" :l "you")))
                                        :Head (Nom
                                            :Head (N :t "name" :p "."))))))))))))

# sent_id = weblog-blogspot.com_dakbangla_20050311135387_ENG_20050311_135387-0001
# sent_num = 7
# text = Zawahiri was associated with a faction of the Egyptian Islamic Jihad known as the Vanguards of Conquest.
# sent = Zawahiri was associated with a faction of the Egyptian Islamic Jihad known as the Vanguards of Conquest
(Clause
    :Subj (NP
        :Head (Nom
            :Head (N :t "Zawahiri")))
    :Head (VP
        :Head (V_aux :t "was" :l "be")
        :Comp (Clause
            :Head (VP
                :Head (V :t "associated" :l "associate")
                :Comp (PP
                    :Head (P :t "with")
                    :Obj (NP
                        :Det (DP
                            :Head (D :t "a"))
                        :Head (Nom
                            :Head (Nom
                                :Head (N :t "faction")
                                :Mod (PP
                                    :Head (P :t "of")
                                    :Obj (NP
                                        :Det (DP
                                            :Head (D :t "the"))
                                        :Head (Nom
                                            :Mod (AdjP
                                                :Head (Adj :t "Egyptian"))
                                            :Head (Nom
                                                :Mod (AdjP
                                                    :Head (Adj :t "Islamic"))
                                                :Head (N :t "Jihad"))))))
                            :Mod (Clause
                                :Head (VP
                                    :Head (V :t "known" :l "know")
                                    :Comp (PP
                                        :Head (P :t "as")
                                        :PredComp (NP
                                            :Det (DP
                                                :Head (D :t "the"))
                                            :Head (Nom
                                                :Head (N :t "Vanguards" :l "Vanguard")
                                                :Comp (PP
                                                    :Head (P :t "of")
                                                    :Obj (NP
                                                        :Head (Nom
                                                            :Head (N :t "Conquest" :p "."))))))))))))))))

# sent_id = reviews-074896-0008
# sent_num = 8
# text = Huge selection and, great suggestions from the staff and they refer you to reliable places if they don't have what you need.
# sent = huge selection and great suggestions from the staff and they refer you to reliable places if they don't have what you need --
(Coordination
    :Coordinate (NP
        :Head (Nom
            :Mod (AdjP
                :Head (Adj :t "huge"))
            :Head (N :t "selection")))
    :Coordinate (NP
        :Marker (Coordinator :t "and")
        :Head (NP
            :Head (Nom
                :Mod (AdjP
                    :Head (Adj :p "," :t "great"))
                :Head (Nom
                    :Head (N :t "suggestions" :l "suggestion")
                    :Mod (PP
                        :Head (P :t "from")
                        :Obj (NP
                            :Det (DP
                                :Head (D :t "the"))
                            :Head (Nom
                                :Head (N :t "staff"))))))))
    :Coordinate (Clause
        :Marker (Coordinator :t "and")
        :Head (Clause
            :Subj (NP
                :Head (Nom
                    :Head (N_pro :t "they")))
            :Head (VP
                :Head (VP
                    :Head (V :t "refer")
                    :Obj (NP
                        :Head (Nom
                            :Head (N_pro :t "you")))
                    :Comp (PP
                        :Head (P :t "to")
                        :Obj (NP
                            :Head (Nom
                                :Mod (AdjP
                                    :Head (Adj :t "reliable"))
                                :Head (N :t "places" :l "place")))))
                :Mod (PP
                    :Head (P :t "if")
                    :Comp (Clause
                        :Subj (NP
                            :Head (Nom
                                :Head (N_pro :t "they")))
                        :Head (VP
                            :Head (V_aux :t "don't" :l "do" :subt "do" :subt "n't")
                            :Comp (Clause
                                :Head (VP
                                    :Head (V :t "have")
                                    :Obj (NP
                                        :Head (Nom
                                            :Mod (Clause_rel
                                                :Head-Prenucleus (x / NP
                                                    :Head (Nom
                                                        :Head (N_pro :t "what")))
                                                :Head (Clause_rel
                                                    :Subj (NP
                                                        :Head (Nom
                                                            :Head (N_pro :t "you")))
                                                    :Head (VP
                                                        :Head (V :t "need" :p ".")
                                                        :Obj (x / GAP)))))))))))))))

# sent_id = newsgroup-groups.google.com_emails_ec0a1064de05e74b_ENG_20040929_023800-0032
# sent_num = 9
# text = Founder Paul Galvin came up with this name when his company started manufacturing radios for cars.
# sent = founder Paul Galvin came up with this name when his company started manufacturing radios for cars
(Clause
    :Subj (NP
        :Head (Nom
            :Mod (Nom
                :Head (N :t "founder"))
            :Head (N
                :Flat (N :t "Paul")
                :Flat (N :t "Galvin"))))
    :Head (VP
        :Head (VP
            :Head (V :t "came" :l "come")
            :Comp (PP
                :Head (P :t "up"))
            :Comp (PP
                :Head (P :t "with")
                :Obj (NP
                    :Det (DP
                        :Head (D :t "this"))
                    :Head (Nom
                        :Head (N :t "name")))))
        :Mod (PP
            :Head (P :t "when")
            :Comp (Clause
                :Subj (NP
                    :Det (NP
                        :Head (Nom
                            :Head (N_pro :t "his" :l "he")))
                    :Head (Nom
                        :Head (N :t "company")))
                :Head (VP
                    :Head (V :t "started" :l "start")
                    :Comp (Clause
                        :Head (VP
                            :Head (V :t "manufacturing" :l "manufacture")
                            :Obj (NP
                                :Head (Nom
                                    :Head (N :t "radios" :l "radio")
                                    :Mod (PP
                                        :Head (P :t "for")
                                        :Obj (NP
                                            :Head (Nom
                                                :Head (N :t "cars" :l "car" :p ".")))))))))))))

# sent_id = reviews-035726-0003
# sent_num = 10
# text = Dr. Aster is very kind an gentle with the children, but also positive and to the point with the parents.
# sent = Dr. Aster is very kind an gentle with the children but also positive and to the point with the parents
(Clause
    :Subj (NP
        :Head (Nom
            :Mod (Nom
                :Head (N :t "Dr."))
            :Head (N :t "Aster")))
    :Head (VP
        :Head (V_aux :t "is" :l "be")
        :PredComp (Coordination
            :Coordinate (AdjP
                :Mod (AdvP
                    :Head (Adv :t "very"))
                :Head (AdjP
                    :Head (Coordination
                        :Coordinate (AdjP
                            :Head (Adj :t "kind"))
                        :Coordinate (AdjP
                            :Marker (Coordinator :t "an" :correct "and" :l "and")
                            :Head (AdjP
                                :Head (Adj :t "gentle"))))
                    :Comp (PP
                        :Head (P :t "with")
                        :Obj (NP
                            :Det (DP
                                :Head (D :t "the"))
                            :Head (Nom
                                :Head (N :t "children" :l "child"))))))
            :Coordinate (AdjP+PP
                :Marker (Coordinator :p "," :t "but")
                :Head (AdjP+PP
                    :Mod (AdvP
                        :Head (Adv :t "also"))
                    :Head (AdjP+PP
                        :Head (Coordination
                            :Coordinate (AdjP
                                :Head (Adj :t "positive"))
                            :Coordinate (PP
                                :Marker (Coordinator :t "and")
                                :Head (PP
                                    :Head (P :t "to")
                                    :Obj (NP
                                        :Det (DP
                                            :Head (D :t "the"))
                                        :Head (Nom
                                            :Head (N :t "point"))))))
                        :Comp (PP
                            :Head (P :t "with")
                            :Obj (NP
                                :Det (DP
                                    :Head (D :t "the"))
                                :Head (Nom
                                    :Head (N :t "parents" :l "parent" :p "."))))))))))

# sent_id = email-enronsent26_01-0028
# sent_num = 11
# text = I'm looking for the confidentiality agreement, which may be in Bart's files (haven't checked closely yet).
# sent = I 'm looking for the confidentiality agreement which -- may be in Bart's files haven't checked closely yet
(Clause
    :Subj (NP
        :Head (Nom
            :Head (N_pro :t "I")))
    :Head (VP
        :Head (V_aux :t "'m" :l "be")
        :Comp (Clause
            :Head (VP
                :Head (V :t "looking" :l "look")
                :Comp (PP
                    :Head (P :t "for")
                    :Obj (NP
                        :Det (DP
                            :Head (D :t "the"))
                        :Head (Nom
                            :Mod (Nom
                                :Head (N :t "confidentiality"))
                            :Head (N :t "agreement")))))))
    :Supplement (Clause_rel
        :Prenucleus (x / NP
            :Head (Nom
                :Head (N_pro :p "," :t "which")))
        :Head (Clause_rel
            :Subj (x / GAP)
            :Head (VP
                :Head (V_aux :t "may")
                :Comp (Clause
                    :Head (VP
                        :Head (V_aux :t "be")
                        :PredComp (PP
                            :Head (P :t "in")
                            :Obj (NP
                                :Head (Nom
                                    :Mod (Nom
                                        :Head (N :t "Bart's" :l "Bart" :subt "Bart" :subt "'s"))
                                    :Head (N :t "files" :l "file"))))))))
        :Supplement (Clause
            :Head (VP
                :Head (V_aux :p "(" :t "haven't" :l "have" :subt "have" :subt "n't")
                :Comp (Clause
                    :Head (VP
                        :Head (VP
                            :Head (V :t "checked" :l "check")
                            :Mod (AdvP
                                :Head (Adv :t "closely")))
                        :Mod (AdvP
                            :Head (Adv :t "yet" :p ")" :p "."))))))))

# sent_id = weblog-blogspot.com_rigorousintuition_20060511134300_ENG_20060511_134300-0289
# sent_num = 12
# text = I just get hung up on 'Christians', as they're the dominant form where I come from.
# sent = I just get hung up on Christians as they 're the dominant form where I come from --
(Clause
    :Subj (NP
        :Head (Nom
            :Head (N_pro :t "I")))
    :Head (VP
        :Head (VP
            :Mod (AdvP
                :Head (Adv :t "just"))
            :Head (VP
                :Head (V :t "get")
                :Comp (Clause
                    :Head (VP
                        :Head (V :t "hung")
                        :Comp (PP
                            :Head (P :t "up"))
                        :Comp (PP
                            :Head (P :t "on")
                            :Obj (NP
                                :Head (Nom
                                    :Head (N :p "'" :t "Christians" :l "Christian"))))))))
        :Mod (PP
            :Head (P :p "'" :p "," :t "as")
            :Comp (Clause
                :Subj (NP
                    :Head (Nom
                        :Head (N_pro :t "they")))
                :Head (VP
                    :Head (VP
                        :Head (V_aux :t "'re" :l "be")
                        :PredComp (NP
                            :Det (DP
                                :Head (D :t "the"))
                            :Head (Nom
                                :Mod (AdjP
                                    :Head (Adj :t "dominant"))
                                :Head (N :t "form"))))
                    :Mod (PP
                        :Mod (Clause_rel
                            :Head-Prenucleus (x / PP
                                :Head (P :t "where"))
                            :Head (Clause_rel
                                :Subj (NP
                                    :Head (Nom
                                        :Head (N_pro :t "I")))
                                :Head (VP
                                    :Head (V :t "come")
                                    :Comp (PP
                                        :Head (P :t "from" :p ".")
                                        :Obj (x / GAP)))))))))))

# sent_id = weblog-juancole.com_juancole_20040823064025_ENG_20040823_064025-0002
# sent_num = 13
# text = The charges that they have put some vets up to making against Kerry are false and can be demonstrated by the historical record to be false .
# sent = the charges that they have put some vets up to making -- against Kerry are false and can be demonstrated by the historical record to be false
(Clause
    :Subj (NP
        :Det (DP
            :Head (D :t "the"))
        :Head (Nom
            :Head (x / N :t "charges" :l "charge")
            :Mod (Clause_rel
                :Marker (Sdr :t "that")
                :Head (Clause_rel
                    :Subj (NP
                        :Head (Nom
                            :Head (N_pro :t "they")))
                    :Head (VP
                        :Head (V_aux :t "have")
                        :Comp (Clause
                            :Head (VP
                                :Head (V :t "put")
                                :Obj (NP
                                    :Det (DP
                                        :Head (D :t "some"))
                                    :Head (Nom
                                        :Head (N :t "vets" :l "vet")))
                                :Comp (PP
                                    :Head (P :t "up")
                                    :Comp (PP
                                        :Head (P :t "to")
                                        :Comp (Clause
                                            :Head (VP
                                                :Head (V :t "making" :l "make")
                                                :Obj (x / GAP)
                                                :Comp (PP
                                                    :Head (P :t "against")
                                                    :Obj (NP
                                                        :Head (Nom
                                                            :Head (N :t "Kerry")))))))))))))))
    :Head (Coordination
        :Coordinate (VP
            :Head (V_aux :t "are" :l "be")
            :PredComp (AdjP
                :Head (Adj :t "false")))
        :Coordinate (VP
            :Marker (Coordinator :t "and")
            :Head (VP
                :Head (V_aux :t "can")
                :Comp (Clause
                    :Head (VP
                        :Head (V_aux :t "be")
                        :Comp (Clause
                            :Head (VP
                                :Head (V :t "demonstrated" :l "demonstrate")
                                :Comp (PP
                                    :Head (P :t "by")
                                    :Obj (NP
                                        :Det (DP
                                            :Head (D :t "the"))
                                        :Head (Nom
                                            :Mod (AdjP
                                                :Head (Adj :t "historical"))
                                            :Head (N :t "record"))))
                                :Comp (Clause
                                    :Head (VP
                                        :Marker (Sdr :t "to")
                                        :Head (VP
                                            :Head (V_aux :t "be")
                                            :PredComp (AdjP
                                                :Head (Adj :t "false" :p ".")))))))))))))

# sent_id = weblog-blogspot.com_healingiraq_20040409053012_ENG_20040409_053012-0022
# sent_num = 14
# text = Over 300 Iraqis are reported dead and 500 wounded in Fallujah alone.
# sent = over 300 Iraqis are reported dead and 500 wounded in Fallujah alone
(Clause
    :Head (Coordination
        :Coordinate (Clause
            :Subj (NP
                :Det (PP
                    :Head (P :t "over")
                    :Obj (NP
                        :Head (Nom
                            :Det-Head (DP
                                :Head (D :t "300")))))
                :Head (Nom
                    :Head (N :t "Iraqis" :l "Iraqi")))
            :Head (VP
                :Head (V_aux :t "are" :l "be")
                :Comp (Clause
                    :Head (VP
                        :Head (V :t "reported" :l "report")
                        :PredComp (AdjP
                            :Head (Adj :t "dead"))))))
        :Coordinate (NP+Clause
            :Marker (Coordinator :t "and")
            :Head (NP+Clause
                :Subj (NP
                    :Head (Nom
                        :Det-Head (DP
                            :Head (D :t "500"))))
                :Head (Clause
                    :Head (VP
                        :Head (V :t "wounded"))))))
    :Mod (PP
        :Head (P :t "in")
        :Obj (NP
            :Head (Nom
                :Head (N :t "Fallujah"))
            :Mod (AdjP
                :Head (Adj :t "alone" :p ".")))))

# sent_id = answers-20111108094831AAnOjgr_ans-0003
# sent_num = 15
# text = I love how it really depends on how good a horse your horse really is, not how talented he is.
# sent = I love how it really depends on how good a horse your horse really is -- not how talented he is -- --
(Clause
    :Subj (NP
        :Head (Nom
            :Head (N_pro :t "I")))
    :Head (VP
        :Head (V :t "love")
        :Comp (Clause
            :Prenucleus (i / AdvP
                :Head (Adv :t "how"))
            :Head (Clause
                :Head (Clause
                    :Subj (NP
                        :Head (Nom
                            :Head (N_pro :t "it")))
                    :Head (VP
                        :Mod (AdvP
                            :Head (Adv :t "really"))
                        :Head (VP
                            :Head (V :t "depends" :l "depend")
                            :Comp (PP
                                :Head (P :t "on")
                                :Comp (Clause
                                    :Prenucleus (y / NP
                                        :Mod (AdjP
                                            :Mod (AdvP
                                                :Head (Adv :t "how"))
                                            :Head (Adj :t "good"))
                                        :Head (NP
                                            :Det (DP
                                                :Head (D :t "a"))
                                            :Head (Nom
                                                :Head (N :t "horse"))))
                                    :Head (Clause
                                        :Subj (NP
                                            :Det (NP
                                                :Head (Nom
                                                    :Head (N_pro :t "your" :l "you")))
                                            :Head (Nom
                                                :Head (N :t "horse")))
                                        :Head (VP
                                            :Mod (AdvP
                                                :Head (Adv :t "really"))
                                            :Head (VP
                                                :Head (V_aux :t "is" :l "be")
                                                :PredComp (y / GAP))))
                                    :Supplement (Clause
                                        :Mod (AdvP
                                            :Head (Adv :p "," :t "not"))
                                        :Head (Clause
                                            :Prenucleus (x / AdjP
                                                :Mod (AdvP
                                                    :Head (Adv :t "how"))
                                                :Head (Adj :t "talented"))
                                            :Head (Clause
                                                :Subj (NP
                                                    :Head (Nom
                                                        :Head (N_pro :t "he")))
                                                :Head (VP
                                                    :Head (V_aux :t "is" :l "be" :p ".")
                                                    :PredComp (x / GAP))))))))))
                :Mod (i / GAP)))))

# sent_id = reviews-211797-0013
# sent_num = 16
# text = Aside from that little *mystery*, one of the sales ladies was quite comfortable telling me how wrong I was about how another dress that I loved compared to one of her dresses that I was trying on.
# sent = aside from that little mystery one of the sales ladies was quite comfortable telling me how wrong -- I was -- about how another dress that I loved -- compared to one of her dresses that I was trying on -- --
(Clause
    :Supplement (PP
        :Head (P :t "aside")
        :Comp (PP
            :Head (P :t "from")
            :Obj (NP
                :Det (DP
                    :Head (D :t "that"))
                :Head (Nom
                    :Mod (AdjP
                        :Head (Adj :t "little"))
                    :Head (N :p "*" :t "mystery")))))
    :Subj (NP
        :Head (Nom
            :Det-Head (DP
                :Head (D :p "*" :p "," :t "one"))
            :Comp (PP
                :Head (P :t "of")
                :Obj (NP
                    :Det (DP
                        :Head (D :t "the"))
                    :Head (Nom
                        :Mod (Nom
                            :Head (N :t "sales" :l "sale"))
                        :Head (N :t "ladies" :l "lady"))))))
    :Head (VP
        :Head (V_aux :t "was" :l "be")
        :PredComp (AdjP
            :Head (AdjP
                :Mod (AdvP
                    :Head (Adv :t "quite"))
                :Head (Adj :t "comfortable"))
            :Comp (Clause
                :Head (VP
                    :Head (V :t "telling" :l "tell")
                    :Obj (NP
                        :Head (Nom
                            :Head (N_pro :t "me" :l "I")))
                    :Comp (Clause
                        :Head (Clause
                            :Prenucleus (x / AdjP
                                :Mod (AdvP
                                    :Head (Adv :t "how"))
                                :Head (AdjP
                                    :Head (Adj :t "wrong")
                                    :Comp (a / GAP)))
                            :Head (Clause
                                :Subj (NP
                                    :Head (Nom
                                        :Head (N_pro :t "I")))
                                :Head (VP
                                    :Head (V_aux :t "was" :l "be")
                                    :PredComp (x / GAP))))
                        :Postnucleus (a / PP
                            :Head (P :t "about")
                            :Comp (Clause
                                :Prenucleus (z / AdvP
                                    :Head (Adv :t "how"))
                                :Head (Clause
                                    :Head (Clause
                                        :Subj (NP
                                            :Det (DP
                                                :Head (D :t "another"))
                                            :Head (Nom
                                                :Head (y / N :t "dress")
                                                :Mod (Clause_rel
                                                    :Marker (Sdr :t "that")
                                                    :Head (Clause_rel
                                                        :Subj (NP
                                                            :Head (Nom
                                                                :Head (N_pro :t "I")))
                                                        :Head (VP
                                                            :Head (V :t "loved" :l "love")
                                                            :Obj (y / GAP))))))
                                        :Head (VP
                                            :Head (V :t "compared" :l "compare")
                                            :Comp (PP
                                                :Head (P :t "to")
                                                :Obj (NP
                                                    :Head (Nom
                                                        :Head (i / Nom
                                                            :Det-Head (DP
                                                                :Head (D :t "one"))
                                                            :Comp (PP
                                                                :Head (P :t "of")
                                                                :Obj (NP
                                                                    :Det (NP
                                                                        :Head (Nom
                                                                            :Head (N_pro :t "her" :l "she")))
                                                                    :Head (Nom
                                                                        :Head (N :t "dresses" :l "dress")))))
                                                        :Mod (Clause_rel
                                                            :Marker (Sdr :t "that")
                                                            :Head (Clause_rel
                                                                :Subj (NP
                                                                    :Head (Nom
                                                                        :Head (N_pro :t "I")))
                                                                :Head (VP
                                                                    :Head (V_aux :t "was" :l "be")
                                                                    :Comp (Clause
                                                                        :Head (VP
                                                                            :Head (VP
                                                                                :Head (V :t "trying" :l "try")
                                                                                :Comp (PP
                                                                                    :Head (P :t "on" :p ".")))
                                                                            :Mod (i / GAP)))))))))))
                                    :Mod (z / GAP))))))))))

# sent_id = reviews-206303-0004
# sent_num = 17
# text = She really listens to what it is you would like to achieve, and I am very happy with my results.
# sent = she really listens to what it is -- you would like to achieve -- and I am very happy with my results
(Coordination
    :Coordinate (Clause
        :Subj (NP
            :Head (Nom
                :Head (N_pro :t "she")))
        :Head (VP
            :Mod (AdvP
                :Head (Adv :t "really"))
            :Head (VP
                :Head (V :t "listens" :l "listen")
                :Comp (PP
                    :Head (P :t "to")
                    :Obj (NP
                        :Head (Nom
                            :Mod (Clause_rel :note "wh-extraction from an it-cleft"
                                :Head-Prenucleus (x / NP
                                    :Head (Nom
                                        :Head (N_pro :t "what")))
                                :Head (Clause_rel
                                    :Head (Clause_rel
                                        :Subj (NP
                                            :Head (Nom
                                                :Head (N_pro :t "it")))
                                        :Head (VP
                                            :Head (V_aux :t "is" :l "be")
                                            :PredComp (x / GAP)))
                                    :Postnucleus (Clause_rel
                                        :Subj (NP
                                            :Head (Nom
                                                :Head (N_pro :t "you")))
                                        :Head (VP
                                            :Head (V_aux :t "would")
                                            :Comp (Clause
                                                :Head (VP
                                                    :Head (V :t "like")
                                                    :Comp (Clause
                                                        :Head (VP
                                                            :Marker (Sdr :t "to")
                                                            :Head (VP
                                                                :Head (V :t "achieve")
                                                                :Obj (x / GAP))))))))))))))))
    :Coordinate (Clause
        :Marker (Coordinator :p "," :t "and")
        :Head (Clause
            :Subj (NP
                :Head (Nom
                    :Head (N_pro :t "I")))
            :Head (VP
                :Head (V_aux :t "am" :l "be")
                :PredComp (AdjP
                    :Mod (AdvP
                        :Head (Adv :t "very"))
                    :Head (AdjP
                        :Head (Adj :t "happy")
                        :Comp (PP
                            :Head (P :t "with")
                            :Obj (NP
                                :Det (NP
                                    :Head (Nom
                                        :Head (N_pro :t "my" :l "I")))
                                :Head (Nom
                                    :Head (N :t "results" :l "result" :p "."))))))))))

# sent_id = reviews-247097-0005
# sent_num = 18
# text = I actually loss 4 pounds after my 1st treatment and 2 pounds after my 2nd treatment.
# sent = I actually loss 4 pounds after my 1st treatment and 2 pounds after my 2nd treatment
(Clause
    :Subj (NP
        :Head (Nom
            :Head (N_pro :t "I")))
    :Head (VP
        :Mod (AdvP
            :Head (Adv :t "actually"))
        :Head (VP
            :Head (V :t "loss" :correct "lost" :l "lose")
            :Obj+Mod (Coordination
                :Coordinate (NP+PP
                    :Obj (NP
                        :Det (DP
                            :Head (D :t "4"))
                        :Head (Nom
                            :Head (N :t "pounds" :l "pound")))
                    :Mod (PP
                        :Head (P :t "after")
                        :Obj (NP
                            :Det (NP
                                :Head (Nom
                                    :Head (N_pro :t "my" :l "I")))
                            :Head (Nom
                                :Mod (AdjP
                                    :Head (Adj :t "1st"))
                                :Head (N :t "treatment")))))
                :Coordinate (NP+PP
                    :Marker (Coordinator :t "and")
                    :Head (NP+PP
                        :Obj (NP
                            :Det (DP
                                :Head (D :t "2"))
                            :Head (Nom
                                :Head (N :t "pounds" :l "pound")))
                        :Mod (PP
                            :Head (P :t "after")
                            :Obj (NP
                                :Det (NP
                                    :Head (Nom
                                        :Head (N_pro :t "my" :l "I")))
                                :Head (Nom
                                    :Mod (AdjP
                                        :Head (Adj :t "2nd"))
                                    :Head (N :t "treatment" :p "."))))))))))

# sent_id = weblog-blogspot.com_alaindewitt_20060924104100_ENG_20060924_104100-0099
# sent_num = 19
# text = Unfortunately, it seems that Europe will understand it only after suicide murders arrive in Europe in a big way.
# sent = unfortunately it seems that Europe will understand it only after suicide murders arrive in Europe in a big way
(Clause
    :Supplement (AdvP
        :Head (Adv :t "unfortunately"))
    :Subj (NP
        :Head (Nom
            :Head (N_pro :p "," :t "it")))
    :Head (VP
        :Head (V :t "seems" :l "seem")
        :Comp (Clause
            :Marker (Sdr :t "that")
            :Head (Clause
                :Subj (NP
                    :Head (Nom
                        :Head (N :t "Europe")))
                :Head (VP
                    :Head (V_aux :t "will")
                    :Comp (Clause
                        :Head (VP
                            :Head (VP
                                :Head (V :t "understand")
                                :Obj (NP
                                    :Head (Nom
                                        :Head (N_pro :t "it"))))
                            :Mod (PP
                                :Mod (AdvP
                                    :Head (Adv :t "only"))
                                :Head (PP
                                    :Head (P :t "after")
                                    :Comp (Clause
                                        :Subj (NP
                                            :Head (Nom
                                                :Mod (Nom
                                                    :Head (N :t "suicide"))
                                                :Head (N :t "murders" :l "murder")))
                                        :Head (VP
                                            :Head (VP
                                                :Head (V :t "arrive")
                                                :Mod (PP
                                                    :Head (P :t "in")
                                                    :Obj (NP
                                                        :Head (Nom
                                                            :Head (N :t "Europe")))))
                                            :Mod (PP
                                                :Head (P :t "in")
                                                :Obj (NP
                                                    :Det (DP
                                                        :Head (D :t "a"))
                                                    :Head (Nom
                                                        :Mod (AdjP
                                                            :Head (Adj :t "big"))
                                                        :Head (N :t "way" :p ".")))))))))))))))

# sent_id = answers-20111108105520AA73Axw_ans-0055
# sent_num = 20
# text = Some people put in a very dilute Acriflaven solution to slow down the fungus, so one can take white eggs out with a pipette or eyedropper.
# sent = some people put in a very dilute Acriflaven solution to slow down the fungus so one can take white eggs out with a pipette or eyedropper
(Clause
    :Subj (NP
        :Det (DP
            :Head (D :t "some"))
        :Head (Nom
            :Head (N :t "people")))
    :Head (VP
        :Head (VP
            :Head (V :t "put")
            :Particle (PP
                :Head (P :t "in"))
            :Obj (NP
                :Det (DP
                    :Head (D :t "a"))
                :Head (Nom
                    :Mod (AdjP
                        :Mod (AdvP
                            :Head (Adv :t "very"))
                        :Head (Adj :t "dilute"))
                    :Head (Nom
                        :Mod (Nom
                            :Head (N :t "Acriflaven"))
                        :Head (N :t "solution")))))
        :Mod (Clause
            :Head (VP
                :Marker (Sdr :t "to")
                :Head (VP
                    :Head (VP
                        :Head (V :t "slow")
                        :Mod (PP
                            :Head (P :t "down")
                            :Obj (NP
                                :Det (DP
                                    :Head (D :t "the"))
                                :Head (Nom
                                    :Head (N :t "fungus")))))
                    :Mod (PP
                        :Head (P :p "," :t "so")
                        :Comp (Clause
                            :Subj (NP
                                :Head (Nom
                                    :Head (N_pro :t "one")))
                            :Head (VP
                                :Head (V_aux :t "can")
                                :Comp (Clause
                                    :Head (VP
                                        :Head (V :t "take")
                                        :Obj (NP
                                            :Head (Nom
                                                :Mod (AdjP
                                                    :Head (Adj :t "white"))
                                                :Head (N :t "eggs" :l "egg")))
                                        :Particle (PP
                                            :Head (P :t "out"))
                                        :Comp (PP
                                            :Head (P :t "with")
                                            :Obj (Coordination
                                                :Coordinate (NP
                                                    :Det (DP
                                                        :Head (D :t "a"))
                                                    :Head (Nom
                                                        :Head (N :t "pipette")))
                                                :Coordinate (NP
                                                    :Marker (Coordinator :t "or")
                                                    :Head (NP
                                                        :Head (Nom
                                                            :Head (N :t "eyedropper" :p "."))))))))))))))))

# sent_id = email-enronsent16_01-0080
# sent_num = 21
# text = the company is Arco Products, adn their comments are on the attached file.
# sent = the company is Arco Products adn their comments are on the attached file
(Coordination
    :Coordinate (Clause
        :Subj (NP
            :Det (DP
                :Head (D :t "the"))
            :Head (Nom
                :Head (N :t "company")))
        :Head (VP
            :Head (V_aux :t "is" :l "be")
            :PredComp (NP
                :Head (Nom
                    :Head (N
                        :Flat (N :t "Arco")
                        :Flat (N :t "Products" :l "Product"))))))
    :Coordinate (Clause
        :Marker (Coordinator :p "," :t "adn" :correct "and" :l "and")
        :Head (Clause
            :Subj (NP
                :Det (NP
                    :Head (Nom
                        :Head (N_pro :t "their" :l "they")))
                :Head (Nom
                    :Head (N :t "comments" :l "comment")))
            :Head (VP
                :Head (V_aux :t "are" :l "be")
                :Comp (PP
                    :Head (P :t "on")
                    :Obj (NP
                        :Det (DP
                            :Head (D :t "the"))
                        :Head (Nom
                            :Mod (VP
                                :Head (V :t "attached" :l "attach"))
                            :Head (N :t "file" :p "."))))))))

# sent_id = newsgroup-groups.google.com_Meditation20052_06390a5f75b2e1f2_ENG_20050316_091700-0036
# sent_num = 22
# text = Continue to feel the warmth of the sunlight all over your body, warming you deeply and gently.
# sent = continue to feel the warmth of the sunlight all over your body warming you deeply and gently
(Clause
    :Head (VP
        :Head (V :t "continue")
        :Comp (Clause
            :Head (VP
                :Marker (Sdr :t "to")
                :Head (VP
                    :Head (V :t "feel")
                    :Obj (NP
                        :Det (DP
                            :Head (D :t "the"))
                        :Head (Nom
                            :Head (Nom
                                :Head (N :t "warmth")
                                :Mod (PP
                                    :Head (P :t "of")
                                    :Obj (NP
                                        :Det (DP
                                            :Head (D :t "the"))
                                        :Head (Nom
                                            :Head (N :t "sunlight")))))
                            :Mod (PP :note "'all over': treating 'all' as modifier (see CGEL p. 645)"
                                :Mod (DP
                                    :Head (D :t "all"))
                                :Head (PP
                                    :Head (P :t "over")
                                    :Obj (NP
                                        :Det (NP
                                            :Head (Nom
                                                :Head (N_pro :t "your" :l "you")))
                                        :Head (Nom
                                            :Head (N :t "body"))))))
                        :Supplement (Clause
                            :Head (VP
                                :Head (VP
                                    :Head (V :p "," :t "warming" :l "warm")
                                    :Obj (NP
                                        :Head (Nom
                                            :Head (N_pro :t "you"))))
                                :Mod (Coordination
                                    :Coordinate (AdvP
                                        :Head (Adv :t "deeply"))
                                    :Coordinate (AdvP
                                        :Marker (Coordinator :t "and")
                                        :Head (AdvP
                                            :Head (Adv :t "gently" :p "."))))))))))))

# sent_id = email-enronsent07_01-0061
# sent_num = 23
# text = With the price caps gone, the generators filed paperwork with federal regulators justifying higher costs.
# sent = with the price caps gone the generators filed paperwork with federal regulators justifying higher costs
(Clause
    :Mod (PP :note "with-absolute construction; possibly should be considered a verbless clause?"
        :Head (P :t "with")
        :Comp (NP+Clause
            :Subj (NP
                :Det (DP
                    :Head (D :t "the"))
                :Head (Nom
                    :Mod (Nom
                        :Head (N :t "price"))
                    :Head (N :t "caps" :l "cap")))
            :Comp (Clause
                :Head (VP
                    :Head (V :t "gone")))))
    :Head (Clause
        :Subj (NP
            :Det (DP
                :Head (D :p "," :t "the"))
            :Head (Nom
                :Head (N :t "generators" :l "generator")))
        :Head (VP
            :Head (VP
                :Head (V :t "filed" :l "file")
                :Obj (NP
                    :Head (Nom
                        :Head (N :t "paperwork")))
                :Comp (PP
                    :Head (P :t "with")
                    :Obj (NP
                        :Head (Nom
                            :Mod (AdjP
                                :Head (Adj :t "federal"))
                            :Head (N :t "regulators" :l "regulator")))))
            :Mod (Clause
                :Head (VP
                    :Head (V :t "justifying" :l "justify")
                    :Obj (NP
                        :Head (Nom
                            :Mod (AdjP
                                :Head (Adj :t "higher" :l "high"))
                            :Head (N :t "costs" :l "cost" :p "."))))))))

# sent_id = newsgroup-groups.google.com_alt.animals_0084bdc731bfc8d8_ENG_20040905_212000-0023
# sent_num = 24
# text = $3.7m - Amount the EPA valued each human life when conducting analyses of proposed regulations during the Bush administration.
# sent = 3.7 m $ amount the EPA valued each human life -- when conducting analyses of proposed regulations during the Bush administration
(NP
    :Supplement (NP
        :Det (DP
            :Head (D
                :Flat (D :t "3.7")
                :Flat (D :t "m" :l "million")))
        :Head (Nom
            :Head (N :t "$")))
    :Head (Nom
        :Head (x / N :p "-" :t "amount")
        :Mod (Clause_rel
            :Subj (NP
                :Det (DP
                    :Head (D :t "the"))
                :Head (Nom
                    :Head (N :t "EPA")))
            :Head (VP
                :Head (VP
                    :Head (V :t "valued" :l "value")
                    :Obj (NP
                        :Det (DP
                            :Head (D :t "each"))
                        :Head (Nom
                            :Mod (AdjP
                                :Head (Adj :t "human"))
                            :Head (N :t "life")))
                    :Comp (x / GAP))
                :Mod (PP
                    :Head (P :t "when")
                    :Comp (Clause
                        :Head (VP
                            :Head (VP
                                :Head (V :t "conducting" :l "conduct")
                                :Obj (NP
                                    :Head (Nom
                                        :Head (N :t "analyses" :l "analysis")
                                        :Comp (PP
                                            :Head (P :t "of")
                                            :Obj (NP
                                                :Head (Nom
                                                    :Mod (VP
                                                        :Head (V :t "proposed" :l "propose"))
                                                    :Head (N :t "regulations" :l "regulation")))))))
                            :Mod (PP
                                :Head (P :t "during")
                                :Obj (NP
                                    :Det (DP
                                        :Head (D :t "the"))
                                    :Head (Nom
                                        :Mod (Nom
                                            :Head (N :t "Bush"))
                                        :Head (N :t "administration" :p ".")))))))))))

# sent_id = newsgroup-groups.google.com_humanities.lit.authors.shakespeare_0018a7697318f71f_ENG_20031006_163200-0078
# sent_num = 25
# text = 1584 Lopez's book translated into Italian by Tarsia and published in Venice.
# sent = 1584 Lopez's book translated into Italian by Tarsia and published in Venice
(NP
    :Head (Nom
        :Det-Head (DP
            :Head (D :t "1584")))
    :Supplement (Clause
        :Subj (NP
            :Head (Nom
                :Mod (Nom
                    :Head (N :t "Lopez's" :l "Lopez" :subt "Lopez" :subt "'s"))
                :Head (N :t "book")))
        :Head (Coordination
            :Coordinate (Clause
                :Head (VP
                    :Head (V :t "translated" :l "translate")
                    :Comp (PP
                        :Head (P :t "into")
                        :Obj (NP
                            :Head (Nom
                                :Head (N :t "Italian"))))
                    :Comp (PP
                        :Head (P :t "by")
                        :Obj (NP
                            :Head (Nom
                                :Head (N :t "Tarsia"))))))
            :Coordinate (Clause
                :Marker (Coordinator :t "and")
                :Head (Clause
                    :Head (VP
                        :Head (V :t "published" :l "publish")
                        :Mod (PP
                            :Head (P :t "in")
                            :Obj (NP
                                :Head (Nom
                                    :Head (N :t "Venice" :p "."))))))))))

# sent_id = reviews-059005-0003
# sent_num = 26
# text = I go in about every morning to get bagels for myself or my co-workers and the employees at Max's are great!!
# sent = I go in about every morning to get bagels for myself or my co-workers and the employees at Max's are great
(Coordination
    :Coordinate (Clause
        :Subj (NP
            :Head (Nom
                :Head (N_pro :t "I")))
        :Head (VP
            :Head (VP
                :Head (VP
                    :Head (VP
                        :Head (V :t "go")
                        :Comp (PP
                            :Head (P :t "in")))
                    :Mod (PP
                        :Head (P :t "about")
                        :Obj (NP
                            :Det (DP
                                :Head (D :t "every"))
                            :Head (Nom
                                :Head (N :t "morning")))))
                :Mod (Clause
                    :Head (VP
                        :Marker (Sdr :t "to")
                        :Head (VP
                            :Head (V :t "get")
                            :Obj (NP
                                :Head (Nom
                                    :Head (N :t "bagels" :l "bagel")))))))
            :Mod (PP
                :Head (P :t "for")
                :Obj (Coordination
                    :Coordinate (NP
                        :Head (Nom
                            :Head (N_pro :t "myself" :l "I")))
                    :Coordinate (NP
                        :Marker (Coordinator :t "or")
                        :Head (NP
                            :Det (NP
                                :Head (Nom
                                    :Head (N_pro :t "my" :l "I")))
                            :Head (Nom
                                :Head (N :t "co-workers" :l "co-worker"))))))))
    :Coordinate (Clause
        :Marker (Coordinator :t "and")
        :Head (Clause
            :Subj (NP
                :Det (DP
                    :Head (D :t "the"))
                :Head (Nom
                    :Head (N :t "employees" :l "employee")
                    :Comp (PP
                        :Head (P :t "at")
                        :Obj (NP
                            :Head (Nom
                                :Head (N :t "Max's" :l "Max" :subt "Max" :subt "'s"))))))
            :Head (VP
                :Head (V_aux :t "are" :l "be")
                :PredComp (AdjP
                    :Head (Adj :t "great" :p "!!"))))))

# sent_id = answers-20111108065616AAKtL2c_ans-0035
# sent_num = 27
# text = The amusing world of cartoons and stories will be a memorable experience for the children.
# sent = the amusing world of cartoons and stories will be a memorable experience for the children
(Clause
    :Subj (NP
        :Det (DP
            :Head (D :t "the"))
        :Head (Nom
            :Head (Nom
                :Mod (AdjP
                    :Head (Adj :t "amusing"))
                :Head (N :t "world"))
            :Mod (PP
                :Head (P :t "of")
                :Obj (Coordination
                    :Coordinate (NP
                        :Head (Nom
                            :Head (N :t "cartoons" :l "cartoon")))
                    :Coordinate (NP
                        :Marker (Coordinator :t "and")
                        :Head (NP
                            :Head (Nom
                                :Head (N :t "stories" :l "story"))))))))
    :Head (VP
        :Head (V_aux :t "will")
        :Comp (Clause
            :Head (VP
                :Head (V_aux :t "be")
                :PredComp (NP
                    :Det (DP
                        :Head (D :t "a"))
                    :Head (Nom
                        :Mod (AdjP
                            :Head (Adj :t "memorable"))
                        :Head (Nom
                            :Head (N :t "experience")
                            :Mod (PP
                                :Head (P :t "for")
                                :Obj (NP
                                    :Det (DP
                                        :Head (D :t "the"))
                                    :Head (Nom
                                        :Head (N :t "children" :l "child" :p ".")))))))))))

